%$ clear all
clc, close all force, clear all

%% Set the data from the file (would read file but formatted as rich text so annoying to process file)
ASetosa = [5.1 3.5 1.4 0.2;...
    4.9 3.0 1.4 0.2;...
    4.7 3.2 1.3 0.2;...
    4.6 3.1 1.5 0.2;...
    5.0 3.6 1.4 0.2;...
    5.4 3.9 1.7 0.4;...
    4.6 3.4 1.4 0.3;...
    5.0 3.4 1.5 0.2;...
    4.4 2.9 1.4 0.2;...
    4.9 3.1 1.5 0.1;...
    5.4 3.7 1.5 0.2;...
    4.8 3.4 1.6 0.2;...
    4.8 3.0 1.4 0.1;...
    4.3 3.0 1.1 0.1;...
    5.8 4.0 1.2 0.2;...
    5.7 4.4 1.5 0.4;...
    5.4 3.9 1.3 0.4;...
    5.1 3.5 1.4 0.3;...
    5.7 3.8 1.7 0.3;...
    5.1 3.8 1.5 0.3;...
    5.4 3.4 1.7 0.2;...
    5.1 3.7 1.5 0.4;...
    4.6 3.6 1.0 0.2;...
    5.1 3.3 1.7 0.5;...
    4.8 3.4 1.9 0.2;...
    5.0 3.0 1.6 0.2;...
    5.0 3.4 1.6 0.4;...
    5.2 3.5 1.5 0.2;...
    5.2 3.4 1.4 0.2;...
    4.7 3.2 1.6 0.2;...
    4.8 3.1 1.6 0.2;...
    5.4 3.4 1.5 0.4;...
    5.2 4.1 1.5 0.1;...
    5.5 4.2 1.4 0.2;...
    4.9 3.1 1.5 0.2;...
    5.0 3.2 1.2 0.2;...
    5.5 3.5 1.3 0.2;...
    4.9 3.6 1.4 0.1;...
    4.4 3.0 1.3 0.2;...
    5.1 3.4 1.5 0.2;...
    5.0 3.5 1.3 0.3;...
    4.5 2.3 1.3 0.3;...
    4.4 3.2 1.3 0.2;...
    5.0 3.5 1.6 0.6;...
    5.1 3.8 1.9 0.4;...
    4.8 3.0 1.4 0.3;...
    5.1 3.8 1.6 0.2;...
    4.6 3.2 1.4 0.2;...
    5.3 3.7 1.5 0.2;...
    5.0 3.3 1.4 0.2];

AVersicolor = [7.0 3.2 4.7 1.4;...
    6.4 3.2 4.5 1.5;...
    6.9 3.1 4.9 1.5;...
    5.5 2.3 4.0 1.3;...
    6.5 2.8 4.6 1.5;...
    5.7 2.8 4.5 1.3;...
    6.3 3.3 4.7 1.6;...
    4.9 2.4 3.3 1.0;...
    6.6 2.9 4.6 1.3;...
    5.2 2.7 3.9 1.4;...
    5.0 2.0 3.5 1.0;...
    5.9 3.0 4.2 1.5;...
    6.0 2.2 4.0 1.0;...
    6.1 2.9 4.7 1.4;...
    5.6 2.9 3.6 1.3;...
    6.7 3.1 4.4 1.4;...
    5.6 3.0 4.5 1.5;...
    5.8 2.7 4.1 1.0;...
    6.2 2.2 4.5 1.5;...
    5.6 2.5 3.9 1.1;...
    5.9 3.2 4.8 1.8;...
    6.1 2.8 4.0 1.3;...
    6.3 2.5 4.9 1.5;...
    6.1 2.8 4.7 1.2;...
    6.4 2.9 4.3 1.3;...
    6.6 3.0 4.4 1.4;...
    6.8 2.8 4.8 1.4;...
    6.7 3.0 5.0 1.7;...
    6.0 2.9 4.5 1.5;...
    5.7 2.6 3.5 1.0;...
    5.5 2.4 3.8 1.1;...
    5.5 2.4 3.7 1.0;...
    5.8 2.7 3.9 1.2;...
    6.0 2.7 5.1 1.6;...
    5.4 3.0 4.5 1.5;...
    6.0 3.4 4.5 1.6;...
    6.7 3.1 4.7 1.5;...
    6.3 2.3 4.4 1.3;...
    5.6 3.0 4.1 1.3;...
    5.5 2.5 4.0 1.3;...
    5.5 2.6 4.4 1.2;...
    6.1 3.0 4.6 1.4;...
    5.8 2.6 4.0 1.2;...
    5.0 2.3 3.3 1.0;...
    5.6 2.7 4.2 1.3;...
    5.7 3.0 4.2 1.2;...
    5.7 2.9 4.2 1.3;...
    6.2 2.9 4.3 1.3;...
    5.1 2.5 3.0 1.1;...
    5.7 2.8 4.1 1.3];

AVirginica = [6.3 3.3 6.0 2.5;...
    5.8 2.7 5.1 1.9;...
    7.1 3.0 5.9 2.1;...
    6.3 2.9 5.6 1.8;...
    6.5 3.0 5.8 2.2;...
    7.6 3.0 6.6 2.1;...
    4.9 2.5 4.5 1.7;...
    7.3 2.9 6.3 1.8;...
    6.7 2.5 5.8 1.8;...
    7.2 3.6 6.1 2.5;...
    6.5 3.2 5.1 2.0;...
    6.4 2.7 5.3 1.9;...
    6.8 3.0 5.5 2.1;...
    5.7 2.5 5.0 2.0;...
    5.8 2.8 5.1 2.4;...
    6.4 3.2 5.3 2.3;...
    6.5 3.0 5.5 1.8;...
    7.7 3.8 6.7 2.2;...
    7.7 2.6 6.9 2.3;...
    6.0 2.2 5.0 1.5;...
    6.9 3.2 5.7 2.3;...
    5.6 2.8 4.9 2.0;...
    7.7 2.8 6.7 2.0;...
    6.3 2.7 4.9 1.8;...
    6.7 3.3 5.7 2.1;...
    7.2 3.2 6.0 1.8;...
    6.2 2.8 4.8 1.8;...
    6.1 3.0 4.9 1.8;...
    6.4 2.8 5.6 2.1;...
    7.2 3.0 5.8 1.6;...
    7.4 2.8 6.1 1.9;...
    7.9 3.8 6.4 2.0;...
    6.4 2.8 5.6 2.2;...
    6.3 2.8 5.1 1.5;...
    6.1 2.6 5.6 1.4;...
    7.7 3.0 6.1 2.3;...
    6.3 3.4 5.6 2.4;...
    6.4 3.1 5.5 1.8;...
    6.0 3.0 4.8 1.8;...
    6.9 3.1 5.4 2.1;...
    6.7 3.1 5.6 2.4;...
    6.9 3.1 5.1 2.3;...
    5.8 2.7 5.1 1.9;...
    6.8 3.2 5.9 2.3;...
    6.7 3.3 5.7 2.5;...
    6.7 3.0 5.2 2.3;...
    6.3 2.5 5.0 1.9;...
    6.5 3.0 5.2 2.0;...
    6.2 3.4 5.4 2.3;...
    5.9 3.0 5.1 1.8];

%% Create two classes with Iris Setosa as one and the rest as the other.

class1 = ASetosa(:,[1,2]);
class2 = cat(1, AVersicolor(:,[1,2]), AVirginica(:,[1,2]));

%% Calculate optimal weight vector a;

alldata = cat(1,class1,class2);
labels = cat(1,-ones(size(class1,1),1),ones(size(class2,1),1));

% lets mix up the order of samples
order = randperm(size(alldata,1));
alldata = alldata(order,:); labels = labels(order);

[w, iter, err] = get_perceptron_weight(alldata,labels);

fprintf('\nFinal w: %.5f %.5f %.5f, found in %4d iterations.\n', w, iter);

%% Plot optimal surface
f = @(x,w) -(w(1)*x + w(3))/w(2);
xx = [min(alldata(:,1)), max(alldata(:,1))];
figure, hold on;

plot(class1(:,1),class1(:,2),'or', 'linewidth', 3); 
plot(class2(:,1),class2(:,2),'sb', 'linewidth', 3); 
plot(xx,f(xx,w),'--k', 'linewidth', 3);
legend('Class 1', 'Class 2', 'Seperating plane');
title('Plane seperating data using perceptron algorithm');

%% Try with different initial values and see number of iterations needed to converge
N = 0; % number of different initial values
results = zeros(N, size(alldata,2) + 2);
for i = 1:N
    a0 = 10 * randn(1,3);
    [w, iter, err] = get_perceptron_weight(alldata, labels, a0);
    fprintf('\nInitial a: [%g,%g,%g], Iterations until convergence: %d\n',a0,iter);
    results(i,:) = [w,iter];
end

%% Trye with full data set

fulldata = cat(1, ASetosa, AVersicolor, AVirginica);
fulllabels = cat(1, -ones(size(ASetosa,1),1), ones(size(AVersicolor,1),1), ones(size(AVirginica,1),1));

% permute the data
perm = randperm(size(fulldata,1));
fulldata = fulldata(perm,:); fulllabels = fulllabels(perm);

[w, iter, err] = get_perceptron_weight(fulldata, fulllabels, zeros(1,size(fulldata,2) + 1),100000);

fprintf('\nError after %d iterations: %.4f\n', iter, err);